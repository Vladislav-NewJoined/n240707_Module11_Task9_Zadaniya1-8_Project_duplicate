package task11_5_1;

// В этом фрагменте, Draft_Module11_Task5_Zadaniya1-3,

public class Task11_5_1 {
    public static void main(String[] args) {
        System.out.println("""
                Задание:\s
                Модуль 11. Протокол “HTTP”. Задание №5:\s
                Цель задания: сформировать базовое представление о сериализации и десериализации в протоколе HTTP
                    Задание:
                    1. Что такое сериализации в контексте протокола HTTP?
                    2. Что такое десериализация в контексте  протокола HTTP?
                    3. За что отвечает HttpMessageConverter?
                
                Решение:\s""");

        System.out.println("""
                Ответ на вопрос 1, Что такое сериализации в контексте протокола HTTP?:
                  В HTTP существуют различные типы запросов, используемые для взаимодействия между клиентом и сервером.
                  Некоторые из известных типов запросов в HTTP:
                  - GET - запрос для получения данных с сервера.
                  - POST - запрос для отправки данных на сервер для обработки.
                  - PUT - запрос для обновления данных на сервере.
                  - DELETE - запрос для удаления данных на сервере.
                  - HEAD - запрос для получения только заголовков ответа без тела сообщения.
                  - OPTIONS - запрос для получения информации о возможностях сервера (поддерживаемых методах, заголовках и т.д.).
                  - PATCH - запрос для частичного обновления данных на сервере.
                  - и др.
                
                Ответ на вопрос 2, Приведите пример любого HTTP запроса:
                  GET /index.html HTTP/1.1
                  Host: www.example.com
                  User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:87.0) Gecko/20100101 Firefox/87.0
                  Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
                  Accept-Language: en-US,en;q=0.5
                  Accept-Encoding: gzip, deflate
                  Connection: keep-alive
                
                  В данном примере запроса происходит GET запрос к странице index.html на сервере www.example.com
                  с использованием протокола HTTP/1.1. В заголовках запроса указывается информация о клиенте (User-Agent),
                  типах контента, которые он принимает (Accept), языке, кодировке и другие параметры.\s""");
    }
}